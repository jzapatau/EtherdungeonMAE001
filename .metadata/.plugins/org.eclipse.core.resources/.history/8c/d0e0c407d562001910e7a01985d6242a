// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package MAE1Project;

import java.util.ArrayList;

/************************************************************/
/**
 * @author Felix Zapata
 * Date: 14/04/2019
 * 
 * Slime class constitutes the third of the concrete classes that
 * derive from Monster. The characteristics of a Spider are:
 * 1. Attack: Low (the character hit by the attack loses the next turn)
 * 2. MaxHealthPoints: Low
 * 
 */
public class Slime extends Monster {
	
	// -------------------------- METHODS --------------------------------/
	
	/**
	 * Class constructor 1
	 */
	public Slime(String name) {
		// Define the inputs for the superclass
		super("Slime", name, 10, 40);
		
		// Define the action and set it
		Action myAction = new Attack(this);
		
		// Set action
		this.setMyAction(myAction);
	}

	@Override
	public void performAction(Individual victim) {
		// The class Slime will perform an attack to its victim, and also
		// as side effect it will disable it for the next turn.
		
		// The Slime simply decreases the health of its victim by a parameter
		// given on the performance.
		
		// Re-adapt the health of the victim
		float victimLastHealth = victim.getLastHealth();
		
		// Compute new health
		victimLastHealth -= this.getPerformance();
		
		// Set the new health as the victims lastHealth
		victim.setLastHealth(victimLastHealth);
		
		// Now disable the object for the next two turns
		int nextTurnNum = this.getClock().getTurnNum() + 2;
		
		// Get the isEnabled ArrayList of the object and update it
		ArrayList<Boolean> isEnabled = victim.getIsEnabled();
		
		// Assign the new isEnabled
		if (nextTurnNum < isEnabled.size()) {
			// Set false to the value assigned to the next Turn of his team
			isEnabled.set(nextTurnNum - 1, false);
			isEnabled.set(nextTurnNum, false);
		}
		else {
			// Add a new record for the next turn which says isEnabled is false;
			isEnabled.add(false);
			isEnabled.add(false);
		}
				
	}

	@Override
	public boolean willDodgeAttack() {
		return false;
	}

	@Override
	public String returnClassName() {
		return "SLIME";
	}

	@Override
	public void retaliate(Individual offender) {
		// Do nothing
	}
	
	
};
